include ../select-items/select-items
include ../checkbox/checkbox
include ../input/input

mixin panel({slider, id, isVertical})    
  -
    const {minValue, maxValue, isTwoHandles, isTip, valueTo, valueFrom, items, stepValue} = slider;
    const {indexFrom, indexTo, values} = items || {undefined};
    const isHasSlider = slider;
    const isHasItems = isHasSlider && items;
    const isHasValues = isHasItems &&  values;
    const lengthValues = isHasValues && values.length || 0;
    const zeroValues = lengthValues < 1;
    const isUsingItems = isHasValues && lengthValues > 1;
    const isHasMinValue = isHasSlider && minValue;
    const isHasMaxValue = isHasSlider && maxValue;

  form.panel.js-panel(autocomplete = "off" class = (isVertical ? 'panel_is-vertical' : '') id=id)
    .panel__values
      .panel__boolean-values
        .panel__checkbox-is-vertical.js-panel__checkbox-is-vertical
          +checkbox({text:'Vertical orientation', isChecked: slider.isVertical})
        .panel__checkbox-is-two-handles.js-panel__checkbox-is-two-handles
          +checkbox({text:'Two handles', isChecked: isTwoHandles})
        .panel__checkbox-is-tip.js-panel__checkbox-is-tip
          +checkbox({text:'Show tips', isChecked: isTip})    
      .panel__input-values
        .panel__section1
          .panel__input-min-value.js-panel__input-min-value
            +input({type: 'text', text:'Min. value', value:isUsingItems ? values[0] : minValue, isDisabled : isUsingItems})      
          .panel__input-max-value.js-panel__input-max-value
            +input({type: 'text', text:'Max. value', value:isUsingItems ? values[lengthValues-1] : maxValue, isDisabled : isUsingItems})
          .panel__input-step-value.js-panel__input-step-value
            +input({type:'number', text:'Step value', value: isUsingItems ? 1 : stepValue, isDisabled : isUsingItems, minValue: 1})
        .panel__section2
          .panel__input-value-from.js-panel__input-value-from
            +input({type: 'text', text:'From value', value: isUsingItems ? values[indexFrom] : valueFrom, isDisabled: !isTwoHandles})
          .panel__input-value-to.js-panel__input-value-to
            +input({type: 'text', text:'To value', value: isUsingItems ? values[indexTo] : valueTo})
          .panel__si-values      
            +select-items({title:'Items', isRemoveDisabled: zeroValues , items: isHasItems ?  values : [], isDisabled: !isUsingItems})
        .panel__section3
          .panel__input-index-from.js-panel__input-index-from
            +input({type: 'number', text:'Index from', value: isHasItems ? indexFrom : '', isDisabled: !isUsingItems || !isTwoHandles, minValue: 0})            
          .panel__input-index-to.js-panel__input-index-to
            +input({type: 'number', text:'Index to', value: isHasItems ? indexTo : '', isDisabled: !isUsingItems, minValue: 0})
    .panel__toxin-rangeslider.toxin-rangeslider-here(data-options=slider)